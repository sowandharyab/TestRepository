<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <flow name="OrderHistory-pa-impl-v2.0Flow">
        <object-to-string-transformer doc:name="Object to String" encoding="UTF-8"/>
        <set-variable variableName="schemaLocation" value="${xml.schema.location.orderHistory.v2.0}" doc:name="Set Schema Location"/>
<<<<<<< HEAD
        <flow-ref name="Schema_Validation_Sub_Flow" doc:name="Schema_Validation_Sub_Flow"/>
        <message-properties-transformer scope="invocation" doc:name="Message Properties">
            <add-message-property key="status" value="#[xpath3(&quot;/*[local-name()='OrderRequest']/*[local-name()='Order_Status']&quot;)]"/>
        </message-properties-transformer>
        <flow-ref name="EDW_Order_Lookup_Flow_V_2.0" doc:name="EDW_Order_Lookup_Flow_V_2.0"/>
        <!-- <set-payload value="#[payload.replaceAll(&quot;&amp;lt;&quot;, &quot;&lt;&quot;).replaceAll(&quot;'&quot;, '&quot;').replaceAll(&quot;&amp;gt;&quot;, &quot;&gt;&quot;).toString()]" mimeType="application/xml" doc:name="Copy_of_Set Payload"/> -->
        <logger message="#[payload]" level="INFO" doc:name="Log_System_Layer_Response"/>
        <exception-strategy ref="PAOrdrer_HistoryApiCatchExceptionStrategy" doc:name="Reference Exception Strategy"/>
    </flow>
    <sub-flow name="Schema_Validation_Sub_Flow"><choice doc:name="If schema validation enabled">
            <when expression="${xml.validation.enabled}">
                <logger message="Schema validation payload: #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Logger"/>
                <logger message="Schema validation xsd: #[flowVars.schemaLocation]" level="INFO" doc:name="Logger-Schema Location"/>
                <invoke object-ref="schemaValidationBean" method="validateXML" methodArguments="#[message.payloadAs(java.lang.String)], #[flowVars.schemaLocation]" doc:name="Invoke schema validation"/>
                <logger message="Completed schema validation" level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <logger message="Schema validation is disabled." level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
</sub-flow>
    <choice-exception-strategy name="PAOrdrer_HistoryApiCatchExceptionStrategy">
        <catch-exception-strategy when="exception.causedBy(org.xml.sax.SAXParseException)" doc:name="Catch Exception Strategy">
            <logger level="ERROR" doc:name="Caught org.xml.sax.SAXParseException ..."/>
            <set-variable variableName="exceptionDetails" value="#[exception.cause.message]" doc:name="Variable"/>
            <dw:transform-message doc:name="Transform Message">
                <dw:set-payload resource="transform-schema-validation-OrderHistory-exception.dwl"/>
            </dw:transform-message>

        </catch-exception-strategy>
        <catch-exception-strategy doc:name="Catch Exception Strategy" when="exception.causedBy(org.mule.api.MessagingException)">
            <logger level="ERROR" doc:name="Caught general exception  ..."/>
            <set-variable variableName="exceptionDetails" value="#[exception.cause.message]" doc:name="Variable"/>
            <dw:transform-message doc:name="Transform Message">
                <dw:set-payload resource="transform-generic-exception-OrderHistory.dwl"/>
            </dw:transform-message>
        </catch-exception-strategy>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <logger level="ERROR" doc:name="Caught general exception  ..."/>
            <set-variable variableName="exceptionDetails" value="#[exception.cause.message]" doc:name="Variable"/>
            <dw:transform-message doc:name="Transform Message">
                <dw:set-payload resource="transform-generic-exception-OrderHistory.dwl"/>
            </dw:transform-message>
        </catch-exception-strategy>
    </choice-exception-strategy>    
</mule>
=======
        <flow-ref name="SchemaValidationFlow" doc:name="SchemaValidationFlow"/>
        <message-properties-transformer scope="invocation" doc:name="Message Properties">
            <add-message-property key="status" value="#[xpath3(&quot;/*[local-name()='OrderRequest']/*[local-name()='Order_Status']&quot;)]"/>
        </message-properties-transformer>
        <flow-ref name="EDW_Order_Lookup_Flow" doc:name="EDW_Order_Lookup_Flow"/>
        <!-- <set-payload value="#[payload.replaceAll(&quot;&amp;lt;&quot;, &quot;&lt;&quot;).replaceAll(&quot;'&quot;, '&quot;').replaceAll(&quot;&amp;gt;&quot;, &quot;&gt;&quot;).toString()]" mimeType="application/xml" doc:name="Copy_of_Set Payload"/> -->
        <logger message="#[payload]" level="INFO" doc:name="Log_System_Layer_Response"/>
        <exception-strategy ref="PASalesOrderApiCatchExceptionStrategy" doc:name="Reference Exception Strategy"/>
    </flow>
</mule>
>>>>>>> test
